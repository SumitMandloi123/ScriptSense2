name: QA

on:
  push:
    branches: [ QA ]  # Runs only on QA branch
  pull_request:
    branches: [ QA ]  # Runs only on PRs to QA

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
      # ✅ Checkout Repository
      - uses: actions/checkout@v4

      # ✅ Setup Node.js
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'yarn'  # Caches Yarn dependencies

      # ✅ Install Dependencies
      - name: Install dependencies
        run: yarn install --frozen-lockfile

      # ✅ Install Playwright Browsers
      - name: Install Playwright Browsers
        run: yarn playwright install --with-deps

      # ✅ Run Playwright Tests & Generate HTML Report
      - name: Run Playwright Tests
        run: yarn playwright test
        env:
          LOGIN_USERNAME: ${{ secrets.LOGIN_USERNAME }} 
          LOGIN_PASSWORD: ${{ secrets.LOGIN_PASSWORD }}

      # ✅ Upload Playwright HTML Report as Artifact
      - name: Upload Playwright HTML Report
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      # ✅ Upload Screenshots & Traces (If Needed)
      - name: Upload Test Results (Screenshots, Traces)
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/  
          retention-days: 30

      # ✅ Ensure Required Node Modules are Installed
      - name: Ensure ts-node and email dependencies are installed
        run: yarn add ts-node nodemailer dotenv --dev

      # ✅ Send Email with HTML Report (Runs Regardless of Pass/Fail)
      - name: Send Email with HTML Report
        if: ${{ always() }}  
        run: yarn ts-node ./tests/utils/sendEmail.ts
        env:
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
          EMAIL_RECEIVER: ${{ secrets.EMAIL_RECEIVER }}
